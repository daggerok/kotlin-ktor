notifications:
  email: false
git:
  quiet: true
  depth: 1

language: java
jdk: openjdk8
python: 3

service:
- docker

addons:
  apt:
    update: true
    packages:
    - sudo
    - lsof
    - wget
    - bash
    - curl
    - jq
    - docker-ce
    - python3-dev
    - python3-pip
    - python3-six
    - python3-setuptools

install: true
before_install:
- docker-compose -v
- export PATH=$HOME/.local/bin:$PATH
- pip3 install --user $(whoami) --upgrade pip >/dev/null # pip3 -> pip
- pip install --user $(whoami) --upgrade docker-compose httpie >/dev/null 2>&1
- http --version --debug
- docker-compose -v
#
- source <(curl -s https://raw.githubusercontent.com/daggerok/bash-functions/master/main.bash)
- stop_any 80 8001 8002 8080 5432

jobs:
  include:

  - stage: test
    name: dist install
    jdk: openjdk8
    script:
      - ./gradlew
      - bash build/install/kotlin-ktor/bin/kotlin-ktor &
      - sleep 2s
      - http :8080

  - stage: test
    name: docker-compose
    jdk: openjdk8
    script:
      - ./gradlew clean build
      - docker build -t ktor-app .
      - docker-compose down -v --rm local
      - docker-compose build --no-cache
      - docker-compose up -d
      - docker-compose logs -f -t &
      - sleep 3s
      - http :8080
      - docker-compose down -v --rm local

  - stage: test
    name: docker jdk11
    jdk: openjdk11
    script:
      - ./gradlew clean build
      - docker build -t ktor-app .
      - docker run -d -it --rm --name ktor-app -p 8080:8080 ktor-app
      - sleep 2s
      - docker logs -t ktor-app
      - http :8080
      - docker rm -f -v ktor-app
      - docker rmi -f ktor-app

  - stage: test
    name: docker
    jdk: openjdk8
    script:
      - ./gradlew clean build
      - docker build -t ktor-app .
      - docker run -d -it --rm --name ktor-app -p 8080:8080 ktor-app
      - sleep 2s
      - docker logs -t ktor-app
      - http :8080
      - docker rm -f -v ktor-app
      - docker rmi -f ktor-app

  - stage: test
    name: good old build
    jdk: openjdk8
    script:
      - bash gradlew ; bash gradlew run &
      - sleep 15
      - http :8080

  - stage: test
    name: good old build jdk11
    jdk: openjdk11
    script:
      - bash gradlew ; bash gradlew run &
      - sleep 15
      - http :8080

  - stage: test
    name: jat jar
    jdk: openjdk8
    script:
      - bash gradlew clean build
      - java -jar build/libs/*.jar &
      - sleep 5
      - http :8080

  - stage: test
    name: fat jar jdk11
    jdk: openjdk11
    script:
      - bash gradlew clean build
      - java -jar build/libs/*.jar &
      - sleep 5
      - http :8080

  - stage: test
    name: dependency updates jdk11
    jdk: openjdk11
    script: ./gradlew dependencyUpdates -Drevision=release

after_script:
  - bash gradlew --stop || echo 'oops!'
  - sudo kill $(sudo lsof -t -i:8080) || echo 'nothing to kill...'

cache:
  directories:
  - ~/.docker
  - ~/.m2
  packages: true
  pip: true
