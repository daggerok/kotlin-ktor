plugins {
  id 'idea'
  id 'java'
  id 'application'
  id 'org.jetbrains.kotlin.jvm' version '1.3.50'
  id 'com.github.ben-manes.versions' version '0.22.0'
}

version = '0.0.3'
group = 'com.github.daggerok.ktor'

java {
  sourceCompatibility = JavaVersion.VERSION_1_8
}

compileKotlin {
  kotlinOptions.jvmTarget = '1.8'
}

compileTestKotlin {
  kotlinOptions.jvmTarget = '1.8'
}

repositories {
  mavenCentral()
}

dependencies {
  implementation(platform('org.jetbrains.kotlin:kotlin-bom:1.3.50'))
  implementation 'org.jetbrains.kotlin:kotlin-stdlib'
  implementation 'io.ktor:ktor-server-netty:1.2.3'
  implementation 'ch.qos.logback:logback-classic:1.3.0-alpha4'
}

clean.doFirst {
  delete "$projectDir/out"
}

wrapper {
  gradleVersion = '5.6'
  distributionType = 'BIN'
}


application {
  mainClassName = 'daggerok.Main'
}

jar {
  // archiveClassifier.set('all')
  duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
  manifest {
    attributes('Main-Class': application.mainClassName)
  }
  from(configurations
          .runtimeClasspath
          .collect {
            println("lib: $it.absolutePath")
            it.isDirectory() ? it : zipTree(it)
          })
  sourceSets.main.allSource.each {
    println("app: $it.absolutePath")
  }
  from(sourceSets.main.output)
}

test {
  testLogging {
    showExceptions = true
    showStandardStreams = true
    events 'passed', 'skipped', 'failed'
  }
}

defaultTasks 'clean', 'build', 'installDist'
